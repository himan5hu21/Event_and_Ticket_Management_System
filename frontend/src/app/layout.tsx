import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { ThemeProvider } from "@/components/theme/theme-provider";
import { AuthProvider } from "@/contexts/AuthContext";
import { LoadingProvider } from "@/contexts/LoadingContext";
import QueryProvider from "@/providers/QueryProvider";
import React from "react";
import RouteProtection from "@/components/auth/RouteProtection";
import ClientWrapper from "@/components/wrappers/client-wrapper";
import { ExtensionCleanup } from "@/components/system/extensionCleanup";
import { Toaster } from "@/components/ui/sonner";
import GlobalLoader from "@/components/GlobalLoader";
import PageLoader from "@/components/PageLoader";
import RouteLoader from "@/components/RouteLoader";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

interface RootLayoutProps {
  children: Readonly<React.ReactNode>;
}

export default function RootLayout({ children }: RootLayoutProps) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        suppressHydrationWarning
      >
        <ClientWrapper>
          <QueryProvider>
            <LoadingProvider>
              <ThemeProvider
                attribute="class"
                defaultTheme="system"
                enableSystem
                disableTransitionOnChange
              >
                <AuthProvider>
                  <ExtensionCleanup />
                  <RouteProtection>
                    <GlobalLoader />
                    {children}
                    <Toaster position="top-center" richColors />
                  </RouteProtection>
                </AuthProvider>
              </ThemeProvider>
            </LoadingProvider>
          </QueryProvider>
        </ClientWrapper>
      </body>
    </html>
  );
}
